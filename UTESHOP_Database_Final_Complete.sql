/* ============================================
   DATABASE: UTESHOP - COMPLETE SETUP SCRIPT
   M√î T·∫¢: Script SQL ho√†n ch·ªânh ƒë·ªÉ setup database UTESHOP
   T√°c gi·∫£: Nh√≥m sinh vi√™n Khoa CNTT - HCMUTE
   Version: 3.0 - Final Complete Version
   
   T√çNH NƒÇNG:
   - T·∫°o database v√† t·∫•t c·∫£ c√°c b·∫£ng
   - S·ª≠a t·∫•t c·∫£ l·ªói schema validation
   - T√†i kho·∫£n m·∫´u v·ªõi m·∫≠t kh·∫©u BCrypt ƒë√∫ng
   - D·ªØ li·ªáu m·∫´u ƒë·∫ßy ƒë·ªß
   - H·ªó tr·ª£ vai tr√≤: Guest, User, Vendor, Admin, Shipper
   
   H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG:
   1. Ch·∫°y to√†n b·ªô script n√†y ƒë·ªÉ t·∫°o database ho√†n ch·ªânh
   2. Kh√¥ng c·∫ßn ch·∫°y th√™m script n√†o kh√°c
   3. Restart Tomcat server sau khi ch·∫°y xong
   4. ƒêƒÉng nh·∫≠p b·∫±ng c√°c t√†i kho·∫£n m·∫´u b√™n d∆∞·ªõi
============================================ */

-- T·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i
IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'UTESHOP')
BEGIN
    CREATE DATABASE UTESHOP;
    PRINT 'Database UTESHOP ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!';
END
ELSE
BEGIN
    PRINT 'Database UTESHOP ƒë√£ t·ªìn t·∫°i!';
END
GO

USE UTESHOP;
GO

-- B·∫≠t ANSI_NULLS v√† QUOTED_IDENTIFIER
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
GO

PRINT 'üöÄ B·∫Øt ƒë·∫ßu setup database UTESHOP ho√†n ch·ªânh...';

/* ========================================
   PH·∫¶N 1: T·∫†O C√ÅC B·∫¢NG CH√çNH
======================================== */

/* ========== 1. B·∫¢NG NG∆Ø·ªúI D√ôNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'NguoiDung')
BEGIN
    CREATE TABLE NguoiDung (
        MaND         INT IDENTITY(1,1) PRIMARY KEY,
        HoTen        NVARCHAR(100) NOT NULL,
        Email        NVARCHAR(100) UNIQUE NOT NULL,
        MatKhau      NVARCHAR(255) NOT NULL,
        TenDangNhap  NVARCHAR(50) UNIQUE NOT NULL,
        VaiTro       NVARCHAR(20) CHECK (VaiTro IN ('USER','VENDOR','ADMIN','SHIPPER')) NOT NULL,
        TrangThai    BIT DEFAULT 1 NOT NULL,
        NgayTao      DATETIME DEFAULT GETDATE(),
        NgayCapNhat  DATETIME DEFAULT GETDATE(),
        SoDienThoai  NVARCHAR(15) NULL,
        DiaChi       NVARCHAR(255) NULL
    );
    PRINT '‚úì B·∫£ng NguoiDung ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng NguoiDung ƒë√£ t·ªìn t·∫°i!';
    
    -- ƒê·∫£m b·∫£o c·ªôt TrangThai l√† BIT type
    IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'NguoiDung' AND COLUMN_NAME = 'TrangThai' AND DATA_TYPE != 'bit')
    BEGIN
        PRINT 'üîß Fixing NguoiDung.TrangThai column type...';
        
        -- Drop constraint if exists
        DECLARE @ConstraintName NVARCHAR(255);
        SELECT @ConstraintName = dc.name
        FROM sys.default_constraints dc
        INNER JOIN sys.columns c ON dc.parent_column_id = c.column_id
        INNER JOIN sys.tables t ON dc.parent_object_id = t.object_id
        WHERE t.name = 'NguoiDung' AND c.name = 'TrangThai';
        
        IF @ConstraintName IS NOT NULL
        BEGIN
            EXEC('ALTER TABLE NguoiDung DROP CONSTRAINT ' + @ConstraintName);
        END
        
        -- Convert to BIT
        ALTER TABLE NguoiDung ADD TrangThai_New BIT NULL;
        UPDATE NguoiDung SET TrangThai_New = CASE 
            WHEN UPPER(LTRIM(RTRIM(CAST(TrangThai AS NVARCHAR(50))))) IN ('1', 'TRUE', 'T', 'YES', 'Y', N'K√çCH HO·∫†T', N'HO·∫†T ƒê·ªòNG') THEN 1 
            ELSE 0 
        END;
        ALTER TABLE NguoiDung DROP COLUMN TrangThai;
        EXEC sp_rename 'NguoiDung.TrangThai_New', 'TrangThai', 'COLUMN';
        ALTER TABLE NguoiDung ALTER COLUMN TrangThai BIT NOT NULL;
        ALTER TABLE NguoiDung ADD CONSTRAINT DF_NguoiDung_TrangThai DEFAULT (1) FOR TrangThai;
        
        PRINT '‚úì NguoiDung.TrangThai fixed to BIT type!';
    END
END
GO

/* ========== 2. B·∫¢NG OTP X√ÅC TH·ª®C ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'OtpXacThuc')
BEGIN
    CREATE TABLE OtpXacThuc (
        maOtp        INT IDENTITY(1,1) PRIMARY KEY,
        email        NVARCHAR(100) NOT NULL,
        maOtpCode    NVARCHAR(6) NOT NULL,
        ngayTao      DATETIME2(6) DEFAULT GETDATE(),
        ngayHetHan   DATETIME2(6) NOT NULL,
        daSuDung     BIT DEFAULT 0 NOT NULL,
        MaND         INT NULL,
        CONSTRAINT FK_OtpXacThuc_NguoiDung FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND) ON DELETE CASCADE
    );
    PRINT '‚úì B·∫£ng OtpXacThuc ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng OtpXacThuc ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 3. B·∫¢NG C·ª¨A H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CuaHang')
BEGIN
    CREATE TABLE CuaHang (
        MaCH         INT IDENTITY(1,1) PRIMARY KEY,
        MaND         INT NOT NULL,
        TenCH        NVARCHAR(255) NOT NULL,
        MoTa         NVARCHAR(1000),
        DiaChi       NVARCHAR(500) NOT NULL,
        SoDienThoai  NVARCHAR(15),
        Email        NVARCHAR(100),
        TrangThai    BIT DEFAULT 1 NOT NULL,
        NgayTao      DATETIME2(6) DEFAULT GETDATE() NOT NULL,
        NgayCapNhat  DATETIME2(6),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND)
    );
    PRINT '‚úì B·∫£ng CuaHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng CuaHang ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 4. B·∫¢NG DANH M·ª§C ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DanhMuc')
BEGIN
    CREATE TABLE DanhMuc (
        MaDM        INT IDENTITY(1,1) PRIMARY KEY,
        TenDM       NVARCHAR(100) NOT NULL,
        MaCha       INT NULL,
        NgayTao     DATETIME DEFAULT GETDATE(),
        NgayCapNhat DATETIME DEFAULT GETDATE(),
        FOREIGN KEY (MaCha) REFERENCES DanhMuc(MaDM)
    );
    PRINT '‚úì B·∫£ng DanhMuc ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng DanhMuc ƒë√£ t·ªìn t·∫°i!';
    
    -- ƒê·∫£m b·∫£o c√≥ c·ªôt NgayTao v√† NgayCapNhat
    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DanhMuc' AND COLUMN_NAME = 'NgayTao')
    BEGIN
        ALTER TABLE DanhMuc ADD NgayTao DATETIME DEFAULT GETDATE();
        UPDATE DanhMuc SET NgayTao = GETDATE() WHERE NgayTao IS NULL;
        PRINT '‚úì Added NgayTao column to DanhMuc';
    END
    
    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DanhMuc' AND COLUMN_NAME = 'NgayCapNhat')
    BEGIN
        ALTER TABLE DanhMuc ADD NgayCapNhat DATETIME DEFAULT GETDATE();
        UPDATE DanhMuc SET NgayCapNhat = GETDATE() WHERE NgayCapNhat IS NULL;
        PRINT '‚úì Added NgayCapNhat column to DanhMuc';
    END
END
GO

/* ========== 5. B·∫¢NG S·∫¢N PH·∫®M ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SanPham')
BEGIN
    CREATE TABLE SanPham (
        MaSP        INT IDENTITY(1,1) PRIMARY KEY,
        MaCH        INT NOT NULL,
        MaDM        INT NULL,
        TenSP       NVARCHAR(255) NOT NULL,
        DonGia      DECIMAL(18,2) CHECK (DonGia >= 0) NOT NULL,
        SoLuongTon  INT DEFAULT 0 CHECK (SoLuongTon >= 0),
        SoLuongBan  INT DEFAULT 0,
        HinhAnh     NVARCHAR(500) NULL,
        MoTa        NTEXT NULL,
        NgayTao     DATETIME DEFAULT GETDATE(),
        NgayCapNhat DATETIME2,
        TrangThai   BIT DEFAULT 1,
        LuotXem     INT DEFAULT 0,
        LuotYeuThich INT DEFAULT 0,
        DiemDanhGiaTrungBinh DECIMAL(3,2) DEFAULT 0,
        SoLuongDanhGia INT DEFAULT 0,
        FOREIGN KEY (MaCH) REFERENCES CuaHang(MaCH),
        FOREIGN KEY (MaDM) REFERENCES DanhMuc(MaDM)
    );
    PRINT '‚úì B·∫£ng SanPham ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng SanPham ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 6. B·∫¢NG ƒê∆†N V·ªä V·∫¨N CHUY·ªÇN ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DonViVanChuyen')
BEGIN
    CREATE TABLE DonViVanChuyen (
        MaVC          INT IDENTITY(1,1) PRIMARY KEY,
        TenDonVi      NVARCHAR(150) NOT NULL,
        PhiVanChuyen  DECIMAL(10,2) DEFAULT 0 CHECK (PhiVanChuyen >= 0)
    );
    PRINT '‚úì B·∫£ng DonViVanChuyen ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng DonViVanChuyen ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 7. B·∫¢NG ƒê∆†N H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DonHang')
BEGIN
    CREATE TABLE DonHang (
        MaDH            INT IDENTITY(1,1) PRIMARY KEY,
        MaND            INT NOT NULL,
        MaVC            INT NULL,
        NgayDat         DATETIME2(6) DEFAULT GETDATE() NOT NULL,
        TongTien        DECIMAL(18,2) DEFAULT 0 CHECK (TongTien >= 0),
        TienGiam        DECIMAL(18,2) DEFAULT 0,
        PhiVanChuyen    DECIMAL(18,2) DEFAULT 0,
        TongThanhToan   DECIMAL(18,2) DEFAULT 0 NOT NULL,
        HinhThucTT      NVARCHAR(50) CHECK (HinhThucTT IN ('COD','VNPAY','MOMO')),
        TrangThai       NVARCHAR(50) DEFAULT N'M·ªõi t·∫°o',
        NgayLap         DATETIME DEFAULT GETDATE(),
        DiaChiGiaoHang  NVARCHAR(500) NOT NULL,
        TenNguoiNhan    NVARCHAR(100),
        SoDienThoaiNhanHang NVARCHAR(15),
        GhiChu          NVARCHAR(1000),
        LyDoHuy         NVARCHAR(500),
        NgayXacNhan     DATETIME2,
        NgayGiaoHang    DATETIME2,
        NgayNhanHang    DATETIME2,
        NgayHuy         DATETIME2,
        NgayCapNhat     DATETIME2,
        PhuongThucThanhToan NVARCHAR(20),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND),
        FOREIGN KEY (MaVC) REFERENCES DonViVanChuyen(MaVC)
    );
    PRINT '‚úì B·∫£ng DonHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng DonHang ƒë√£ t·ªìn t·∫°i!';
    
    -- ƒê·∫£m b·∫£o c√≥ c√°c c·ªôt c·∫ßn thi·∫øt
    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DonHang' AND COLUMN_NAME = 'DiaChiGiaoHang')
    BEGIN
        ALTER TABLE DonHang ADD DiaChiGiaoHang NVARCHAR(500) NOT NULL DEFAULT N'ƒê·ªãa ch·ªâ m·∫∑c ƒë·ªãnh';
        PRINT '‚úì Added DiaChiGiaoHang column to DonHang';
    END
    
    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DonHang' AND COLUMN_NAME = 'NgayDat')
    BEGIN
        ALTER TABLE DonHang ADD NgayDat DATETIME2(6) NOT NULL DEFAULT GETDATE();
        PRINT '‚úì Added NgayDat column to DonHang';
    END
    
    IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'DonHang' AND COLUMN_NAME = 'TongThanhToan')
    BEGIN
        ALTER TABLE DonHang ADD TongThanhToan DECIMAL(18,2) NOT NULL DEFAULT 0;
        UPDATE DonHang SET TongThanhToan = ISNULL(TongTien, 0) + ISNULL(PhiVanChuyen, 0) - ISNULL(TienGiam, 0);
        PRINT '‚úì Added TongThanhToan column to DonHang';
    END
END
GO

/* ========== 8. B·∫¢NG CHI TI·∫æT ƒê∆†N H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ChiTietDonHang')
BEGIN
    CREATE TABLE ChiTietDonHang (
        MaDH      INT NOT NULL,
        MaSP      INT NOT NULL,
        SoLuong   INT DEFAULT 1 CHECK (SoLuong > 0),
        DonGia    DECIMAL(18,2) CHECK (DonGia >= 0) NOT NULL,
        GiamGia   DECIMAL(5,2) DEFAULT 0 CHECK (GiamGia >= 0),
        ThanhTien AS (SoLuong * DonGia * (1 - GiamGia/100)) PERSISTED,
        PRIMARY KEY (MaDH, MaSP),
        FOREIGN KEY (MaDH) REFERENCES DonHang(MaDH) ON DELETE CASCADE,
        FOREIGN KEY (MaSP) REFERENCES SanPham(MaSP)
    );
    PRINT '‚úì B·∫£ng ChiTietDonHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng ChiTietDonHang ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 9. B·∫¢NG GI·ªé H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'GioHang')
BEGIN
    CREATE TABLE GioHang (
        MaGH     INT IDENTITY(1,1) PRIMARY KEY,
        MaND     INT NOT NULL,
        NgayTao  DATETIME DEFAULT GETDATE(),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND)
    );
    PRINT '‚úì B·∫£ng GioHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng GioHang ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 10. B·∫¢NG CHI TI·∫æT GI·ªé H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ChiTietGioHang')
BEGIN
    CREATE TABLE ChiTietGioHang (
        MaGH     INT NOT NULL,
        MaSP     INT NOT NULL,
        SoLuong  INT DEFAULT 1 CHECK (SoLuong > 0),
        NgayThem DATETIME DEFAULT GETDATE(),
        PRIMARY KEY (MaGH, MaSP),
        FOREIGN KEY (MaGH) REFERENCES GioHang(MaGH) ON DELETE CASCADE,
        FOREIGN KEY (MaSP) REFERENCES SanPham(MaSP)
    );
    PRINT '‚úì B·∫£ng ChiTietGioHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng ChiTietGioHang ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 11. B·∫¢NG ƒê√ÅNH GI√Å S·∫¢N PH·∫®M ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DanhGiaSanPham')
BEGIN
    CREATE TABLE DanhGiaSanPham (
        MaDG     INT IDENTITY(1,1) PRIMARY KEY,
        MaSP     INT NOT NULL,
        MaND     INT NOT NULL,
        SoSao    INT CHECK (SoSao BETWEEN 1 AND 5),
        NoiDung  NVARCHAR(500) NOT NULL,
        HinhAnh  NVARCHAR(255) NULL,
        NgayDG   DATETIME DEFAULT GETDATE(),
        FOREIGN KEY (MaSP) REFERENCES SanPham(MaSP),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND)
    );
    PRINT '‚úì B·∫£ng DanhGiaSanPham ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng DanhGiaSanPham ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 12. B·∫¢NG M√É GI·∫¢M GI√Å ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'MaGiamGia')
BEGIN
    CREATE TABLE MaGiamGia (
        MaGG           INT IDENTITY(1,1) PRIMARY KEY,
        MaCode         NVARCHAR(50) UNIQUE NOT NULL,
        maSo           NVARCHAR(20) UNIQUE NOT NULL,
        tenChuongTrinh NVARCHAR(255) NOT NULL,
        loaiGiam       NVARCHAR(20) NOT NULL,
        giaTriGiam     DECIMAL(18,2) NOT NULL,
        ngayBatDau     DATETIME2(6) NOT NULL,
        ngayKetThuc    DATETIME2(6) NOT NULL,
        PhanTramGiam   INT CHECK (PhanTramGiam BETWEEN 0 AND 100),
        GiaTriToiThieu DECIMAL(18,2) DEFAULT 0,
        HanSuDung      DATETIME NOT NULL
    );
    PRINT '‚úì B·∫£ng MaGiamGia ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng MaGiamGia ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 13. B·∫¢NG ƒê·ªäA CH·ªà GIAO H√ÄNG ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'DiaChiGiaoHang')
BEGIN
    CREATE TABLE DiaChiGiaoHang (
        MaDC INT IDENTITY(1,1) PRIMARY KEY,
        MaND INT NOT NULL,
        TenNguoiNhan NVARCHAR(100) NOT NULL,
        SoDienThoai NVARCHAR(15) NOT NULL,
        DiaChi NVARCHAR(500) NOT NULL,
        TinhThanh NVARCHAR(100) NOT NULL,
        QuanHuyen NVARCHAR(100) NOT NULL,
        PhuongXa NVARCHAR(100) NOT NULL,
        LaMacDinh BIT DEFAULT 0,
        NgayTao DATETIME DEFAULT GETDATE(),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND)
    );
    PRINT '‚úì B·∫£ng DiaChiGiaoHang ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng DiaChiGiaoHang ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 14. B·∫¢NG S·∫¢N PH·∫®M Y√äU TH√çCH ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SanPhamYeuThich')
BEGIN
    CREATE TABLE SanPhamYeuThich (
        MaND INT NOT NULL,
        MaSP INT NOT NULL,
        NgayThem DATETIME DEFAULT GETDATE(),
        PRIMARY KEY (MaND, MaSP),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND) ON DELETE CASCADE,
        FOREIGN KEY (MaSP) REFERENCES SanPham(MaSP) ON DELETE CASCADE
    );
    PRINT '‚úì B·∫£ng SanPhamYeuThich ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng SanPhamYeuThich ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========== 15. B·∫¢NG S·∫¢N PH·∫®M ƒê√É XEM ========== */
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SanPhamDaXem')
BEGIN
    CREATE TABLE SanPhamDaXem (
        MaND INT NOT NULL,
        MaSP INT NOT NULL,
        NgayXem DATETIME DEFAULT GETDATE(),
        PRIMARY KEY (MaND, MaSP),
        FOREIGN KEY (MaND) REFERENCES NguoiDung(MaND) ON DELETE CASCADE,
        FOREIGN KEY (MaSP) REFERENCES SanPham(MaSP) ON DELETE CASCADE
    );
    PRINT '‚úì B·∫£ng SanPhamDaXem ƒë√£ ƒë∆∞·ª£c t·∫°o!';
END
ELSE
BEGIN
    PRINT '‚úì B·∫£ng SanPhamDaXem ƒë√£ t·ªìn t·∫°i!';
END
GO

/* ========================================
   PH·∫¶N 2: D·ªÆ LI·ªÜU M·∫™U V·ªöI M·∫¨T KH·∫®U BCRYPT ƒê√öNG
======================================== */

PRINT 'üìä Th√™m d·ªØ li·ªáu m·∫´u...';

-- X√≥a d·ªØ li·ªáu c≈© ƒë·ªÉ tr√°nh tr√πng l·∫∑p
DELETE FROM ChiTietDonHang;
DELETE FROM DonHang;
DELETE FROM ChiTietGioHang;
DELETE FROM GioHang;
DELETE FROM DanhGiaSanPham;
DELETE FROM SanPham;
DELETE FROM CuaHang;
DELETE FROM DanhMuc;
DELETE FROM NguoiDung WHERE MaND > 0;
DELETE FROM DonViVanChuyen;
DELETE FROM MaGiamGia;
DBCC CHECKIDENT ('NguoiDung', RESEED, 0);
DBCC CHECKIDENT ('CuaHang', RESEED, 0);
DBCC CHECKIDENT ('DanhMuc', RESEED, 0);
DBCC CHECKIDENT ('SanPham', RESEED, 0);
DBCC CHECKIDENT ('DonHang', RESEED, 0);

-- Th√™m t√†i kho·∫£n ng∆∞·ªùi d√πng v·ªõi m·∫≠t kh·∫©u BCrypt ƒê√öNG
INSERT INTO NguoiDung (TenDangNhap, MatKhau, Email, HoTen, VaiTro, TrangThai, NgayTao, NgayCapNhat, SoDienThoai, DiaChi) VALUES 
-- T√†i kho·∫£n Admin
('admin', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@uteshop.com', N'Qu·∫£n tr·ªã vi√™n', 'ADMIN', 1, GETDATE(), GETDATE(), '0901234567', N'123 Admin Street, TP.HCM'),

-- T√†i kho·∫£n Vendor  
('vendor', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'vendor@uteshop.com', N'Ng∆∞·ªùi b√°n h√†ng', 'VENDOR', 1, GETDATE(), GETDATE(), '0901234568', N'456 Vendor Street, TP.HCM'),

-- T√†i kho·∫£n User
('user', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'user@uteshop.com', N'Kh√°ch h√†ng', 'USER', 1, GETDATE(), GETDATE(), '0901234569', N'789 User Street, TP.HCM'),

-- T√†i kho·∫£n Shipper
('shipper', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'shipper@uteshop.com', N'Nh√¢n vi√™n giao h√†ng', 'SHIPPER', 1, GETDATE(), GETDATE(), '0901234570', N'101 Shipper Street, TP.HCM'),

-- T√†i kho·∫£n test ƒë∆°n gi·∫£n
('test', 'test', 'test@uteshop.com', N'Test User', 'USER', 1, GETDATE(), GETDATE(), '0901234571', N'Test Address');

PRINT '‚úì ƒê√£ th√™m 5 t√†i kho·∫£n ng∆∞·ªùi d√πng (Admin, Vendor, User, Shipper, Test)';

-- Th√™m danh m·ª•c s·∫£n ph·∫©m
INSERT INTO DanhMuc (TenDM, MaCha, NgayTao, NgayCapNhat) VALUES 
(N'ƒêi·ªán tho·∫°i', NULL, GETDATE(), GETDATE()),
(N'Laptop', NULL, GETDATE(), GETDATE()),
(N'Th·ªùi trang', NULL, GETDATE(), GETDATE()),
(N'Ph·ª• ki·ªán', NULL, GETDATE(), GETDATE()),
(N'ƒê·ªìng h·ªì', NULL, GETDATE(), GETDATE()),
(N'iPhone', 1, GETDATE(), GETDATE()),
(N'Samsung', 1, GETDATE(), GETDATE()),
(N'Asus', 2, GETDATE(), GETDATE()),
(N'Dell', 2, GETDATE(), GETDATE()),
(N'√Åo thun', 3, GETDATE(), GETDATE());

PRINT '‚úì ƒê√£ th√™m 10 danh m·ª•c s·∫£n ph·∫©m';

-- Th√™m ƒë∆°n v·ªã v·∫≠n chuy·ªÉn
INSERT INTO DonViVanChuyen (TenDonVi, PhiVanChuyen) VALUES 
(N'Giao h√†ng nhanh', 25000),
(N'Giao h√†ng ti·∫øt ki·ªám', 15000),
(N'Giao h√†ng h·ªèa t·ªëc', 50000),
(N'Giao h√†ng mi·ªÖn ph√≠', 0);

PRINT '‚úì ƒê√£ th√™m 4 ƒë∆°n v·ªã v·∫≠n chuy·ªÉn';

-- Th√™m c·ª≠a h√†ng m·∫´u
INSERT INTO CuaHang (MaND, TenCH, MoTa, DiaChi, SoDienThoai, Email, TrangThai, NgayTao) VALUES 
(2, N'C·ª≠a h√†ng ƒëi·ªán t·ª≠ ABC', N'Chuy√™n b√°n ƒëi·ªán tho·∫°i, laptop ch√≠nh h√£ng', N'123 Nguy·ªÖn VƒÉn C·ª´, Qu·∫≠n 5, TP.HCM', '0281234567', 'abc@shop.com', 1, GETDATE()),
(2, N'Th·ªùi trang XYZ', N'Th·ªùi trang nam n·ªØ trendy', N'456 L√™ VƒÉn S·ªπ, Qu·∫≠n 3, TP.HCM', '0281234568', 'xyz@fashion.com', 1, GETDATE());

PRINT '‚úì ƒê√£ th√™m 2 c·ª≠a h√†ng m·∫´u';

-- Th√™m s·∫£n ph·∫©m m·∫´u
INSERT INTO SanPham (MaCH, MaDM, TenSP, DonGia, SoLuongTon, SoLuongBan, HinhAnh, MoTa, NgayTao, TrangThai) VALUES 
(1, 6, N'iPhone 15 Pro Max', 29999000, 50, 10, '/images/iphone15pro.jpg', N'iPhone 15 Pro Max 256GB - Ch√≠nh h√£ng Apple Vi·ªát Nam', GETDATE(), 1),
(1, 7, N'Samsung Galaxy S24 Ultra', 25999000, 30, 5, '/images/s24ultra.jpg', N'Samsung Galaxy S24 Ultra 512GB - Ch√≠nh h√£ng', GETDATE(), 1),
(1, 8, N'ASUS ROG Strix G15', 22999000, 20, 3, '/images/asus-rog.jpg', N'ASUS ROG Strix G15 - Gaming Laptop RTX 4060', GETDATE(), 1),
(2, 10, N'√Åo thun nam basic', 199000, 100, 25, '/images/ao-thun-nam.jpg', N'√Åo thun nam cotton 100% tho√°ng m√°t', GETDATE(), 1),
(2, 5, N'ƒê·ªìng h·ªì th√¥ng minh Apple Watch', 9999000, 15, 8, '/images/apple-watch.jpg', N'Apple Watch Series 9 GPS 45mm', GETDATE(), 1);

PRINT '‚úì ƒê√£ th√™m 5 s·∫£n ph·∫©m m·∫´u';

-- Th√™m m√£ gi·∫£m gi√°
INSERT INTO MaGiamGia (MaCode, maSo, tenChuongTrinh, loaiGiam, giaTriGiam, ngayBatDau, ngayKetThuc, PhanTramGiam, GiaTriToiThieu, HanSuDung) VALUES 
('WELCOME10', 'WELCOME10', N'Ch√†o m·ª´ng kh√°ch h√†ng m·ªõi', 'PERCENT', 10, GETDATE(), DATEADD(month, 3, GETDATE()), 10, 500000, DATEADD(month, 3, GETDATE())),
('FREESHIP', 'FREESHIP', N'Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn', 'FIXED', 25000, GETDATE(), DATEADD(month, 1, GETDATE()), 0, 1000000, DATEADD(month, 1, GETDATE())),
('SALE20', 'SALE20', N'Gi·∫£m gi√° 20%', 'PERCENT', 20, GETDATE(), DATEADD(week, 2, GETDATE()), 20, 2000000, DATEADD(week, 2, GETDATE()));

PRINT '‚úì ƒê√£ th√™m 3 m√£ gi·∫£m gi√°';

-- T·∫°o gi·ªè h√†ng m·∫´u
INSERT INTO GioHang (MaND, NgayTao) VALUES 
(3, GETDATE()),
(5, GETDATE());

PRINT '‚úì ƒê√£ t·∫°o gi·ªè h√†ng cho user';

-- Th√™m chi ti·∫øt gi·ªè h√†ng
INSERT INTO ChiTietGioHang (MaGH, MaSP, SoLuong, NgayThem) VALUES 
(1, 1, 1, GETDATE()),
(1, 4, 2, GETDATE()),
(2, 2, 1, GETDATE());

PRINT '‚úì ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng';

/* ========================================
   PH·∫¶N 3: HO√ÄN TH√ÄNH V√Ä KI·ªÇM TRA
======================================== */

-- Ki·ªÉm tra k·∫øt qu·∫£ cu·ªëi c√πng
PRINT '';
PRINT 'üéØ ===============================================';
PRINT 'üéØ HO√ÄN TH√ÄNH SETUP DATABASE UTESHOP!';  
PRINT 'üéØ ===============================================';
PRINT '';

-- Hi·ªÉn th·ªã th·ªëng k√™
PRINT 'üìä TH·ªêNG K√ä DATABASE:';
SELECT 'NguoiDung' as TableName, COUNT(*) as RecordCount FROM NguoiDung
UNION ALL SELECT 'DanhMuc', COUNT(*) FROM DanhMuc  
UNION ALL SELECT 'CuaHang', COUNT(*) FROM CuaHang
UNION ALL SELECT 'SanPham', COUNT(*) FROM SanPham
UNION ALL SELECT 'DonViVanChuyen', COUNT(*) FROM DonViVanChuyen
UNION ALL SELECT 'MaGiamGia', COUNT(*) FROM MaGiamGia
UNION ALL SELECT 'GioHang', COUNT(*) FROM GioHang
ORDER BY TableName;

PRINT '';
PRINT 'üîë T√ÄI KHO·∫¢N ƒêƒÇNG NH·∫¨P:';
PRINT '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ';
PRINT 'üë®‚Äçüíº ADMIN:    Username: admin    | Password: password';
PRINT 'üè™ VENDOR:   Username: vendor   | Password: password'; 
PRINT 'üë§ USER:     Username: user     | Password: password';
PRINT 'üöö SHIPPER:  Username: shipper  | Password: password';
PRINT 'üß™ TEST:     Username: test     | Password: test';
PRINT '';
PRINT 'üí° L∆ØU √ù: M·∫≠t kh·∫©u "password" ƒë√£ ƒë∆∞·ª£c m√£ h√≥a BCrypt';
PRINT 'üí° T√†i kho·∫£n "test" s·ª≠ d·ª•ng plain text password';
PRINT '';
PRINT '‚úÖ T·∫•t c·∫£ l·ªói schema validation ƒë√£ ƒë∆∞·ª£c s·ª≠a';
PRINT '‚úÖ Database ƒë√£ s·∫µn s√†ng cho ·ª©ng d·ª•ng UTESHOP';
PRINT '‚úÖ Restart Tomcat server ƒë·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng';
PRINT '';
PRINT 'üéØ ===============================================';

GO