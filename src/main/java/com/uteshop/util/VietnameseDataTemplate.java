package com.uteshop.util;

import com.uteshop.dao.NguoiDungDAO;
import com.uteshop.entity.NguoiDung;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Arrays;
import java.util.Date;

/**
 * Template class for adding Vietnamese data to prevent encoding issues
 * Use this class as a reference when adding new Vietnamese data
 */
public class VietnameseDataTemplate {
    
    /**
     * Sample Vietnamese names for testing
     */
    public static final List<String> SAMPLE_VIETNAMESE_NAMES = Arrays.asList(
        "Nguy·ªÖn VƒÉn An",
        "Tr·∫ßn Th·ªã B√¨nh", 
        "L√™ Ho√†ng C∆∞·ªùng",
        "Ph·∫°m Minh ƒê·ª©c",
        "V√µ Th·ªã H∆∞∆°ng",
        "ƒê·∫∑ng VƒÉn Kh√°nh",
        "B√πi Th·ªã Lan",
        "Ho√†ng Minh Nam",
        "D∆∞∆°ng Th·ªã Oanh",
        "Ng√¥ VƒÉn Phong",
        "Tr∆∞∆°ng Th·ªã Mai",
        "Phan VƒÉn H√≤a",
        "L√Ω Th·ªã Kim",
        "ƒêinh VƒÉn Long",
        "V≈© Th·ªã Ng·ªçc"
    );
    
    /**
     * Sample Vietnamese addresses
     */
    public static final List<String> SAMPLE_VIETNAMESE_ADDRESSES = Arrays.asList(
        "123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM",
        "456 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM", 
        "789 Tr·∫ßn H∆∞ng ƒê·∫°o, Qu·∫≠n 5, TP.HCM",
        "12 V√µ VƒÉn Ng√¢n, Th·ªß ƒê·ª©c, TP.HCM",
        "34 L√Ω Th∆∞·ªùng Ki·ªát, Qu·∫≠n 10, TP.HCM",
        "56 C√°ch M·∫°ng Th√°ng 8, Qu·∫≠n 3, TP.HCM",
        "78 Hai B√† Tr∆∞ng, Qu·∫≠n 3, TP.HCM",
        "90 Nguy·ªÖn Th·ªã Minh Khai, Qu·∫≠n 1, TP.HCM",
        "11 ƒêi·ªán Bi√™n Ph·ªß, Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM",
        "22 Phan VƒÉn Tr·ªã, Qu·∫≠n G√≤ V·∫•p, TP.HCM",
        "33 Ho√†ng VƒÉn Th·ª•, Qu·∫≠n Ph√∫ Nhu·∫≠n, TP.HCM",
        "44 Nguy·ªÖn VƒÉn C·ª´, Qu·∫≠n 5, TP.HCM",
        "55 L√™ VƒÉn S·ªπ, Qu·∫≠n 3, TP.HCM",
        "66 Tr∆∞·ªùng Chinh, Qu·∫≠n T√¢n B√¨nh, TP.HCM",
        "77 X√¥ Vi·∫øt Ngh·ªá Tƒ©nh, Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM"
    );
    
    /**
     * Sample Vietnamese product names
     */
    public static final List<String> SAMPLE_PRODUCT_NAMES = Arrays.asList(
        "√Åo thun nam cao c·∫•p",
        "T√∫i x√°ch n·ªØ th·ªùi trang",
        "Gi√†y th·ªÉ thao ch·∫°y b·ªô",
        "ƒê·ªìng h·ªì th√¥ng minh",
        "ƒêi·ªán tho·∫°i di ƒë·ªông",
        "M√°y t√≠nh x√°ch tay",
        "Tai nghe kh√¥ng d√¢y",
        "B√†n ph√≠m c∆° gaming",
        "Chu·ªôt m√°y t√≠nh vƒÉn ph√≤ng",
        "Loa bluetooth mini",
        "·ªêp l∆∞ng ƒëi·ªán tho·∫°i",
        "S·∫°c d·ª± ph√≤ng di ƒë·ªông",
        "K√≠nh c∆∞·ªùng l·ª±c b·∫£o v·ªá",
        "C√°p s·∫°c ch√≠nh h√£ng",
        "ƒê·∫ø t·∫£n nhi·ªát laptop"
    );
    
    /**
     * Sample Vietnamese product descriptions
     */
    public static final List<String> SAMPLE_PRODUCT_DESCRIPTIONS = Arrays.asList(
        "S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao, ƒë∆∞·ª£c nh·∫≠p kh·∫©u t·ª´ Nh·∫≠t B·∫£n",
        "Thi·∫øt k·∫ø hi·ªán ƒë·∫°i, ph√π h·ª£p v·ªõi xu h∆∞·ªõng th·ªùi trang",
        "Ch·∫•t li·ªáu b·ªÅn b·ªâ, s·ª≠ d·ª•ng ƒë∆∞·ª£c trong th·ªùi gian d√†i",
        "C√¥ng ngh·ªá ti√™n ti·∫øn, mang l·∫°i tr·∫£i nghi·ªám tuy·ªát v·ªùi",
        "Gi√° c·∫£ ph·∫£i chƒÉng, ph√π h·ª£p v·ªõi m·ªçi ƒë·ªëi t∆∞·ª£ng",
        "B·∫£o h√†nh ch√≠nh h√£ng 12 th√°ng t·∫°i Vi·ªát Nam",
        "Giao h√†ng nhanh ch√≥ng trong v√≤ng 24 gi·ªù",
        "H·ªó tr·ª£ kh√°ch h√†ng 24/7 qua hotline",
        "ƒê·ªïi tr·∫£ mi·ªÖn ph√≠ trong v√≤ng 7 ng√†y",
        "S·∫£n ph·∫©m ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t nƒÉm 2024",
        "Thi·∫øt k·∫ø ergonomic, tho·∫£i m√°i khi s·ª≠ d·ª•ng",
        "Ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng, th√¢n thi·ªán m√¥i tr∆∞·ªùng",
        "D·ªÖ d√†ng v·ªá sinh v√† b·∫£o d∆∞·ª°ng",
        "Ph√π h·ª£p cho c·∫£ nam v√† n·ªØ m·ªçi l·ª©a tu·ªïi",
        "ƒê∆∞·ª£c ch·ª©ng nh·∫≠n an to√†n qu·ªëc t·∫ø"
    );
    
    /**
     * Create a sample user with Vietnamese data
     * Use this method as template when adding new users
     */
    public static NguoiDung createSampleVietnameseUser(String username, String email) {
        NguoiDung user = new NguoiDung();
        
        // Use VietnameseEncodingUtil to ensure proper encoding
        user.setTenDangNhap(username);
        user.setEmail(email);
        user.setMatKhau("password123"); // In real app, use PasswordUtil.hashPassword()
        
        // Randomly select Vietnamese name and address
        String vietnameseName = SAMPLE_VIETNAMESE_NAMES.get(
            (int)(Math.random() * SAMPLE_VIETNAMESE_NAMES.size())
        );
        String vietnameseAddress = SAMPLE_VIETNAMESE_ADDRESSES.get(
            (int)(Math.random() * SAMPLE_VIETNAMESE_ADDRESSES.size())
        );
        
        user.setHoTen(VietnameseEncodingUtil.prepareVietnameseText(vietnameseName));
        user.setDiaChi(VietnameseEncodingUtil.prepareVietnameseText(vietnameseAddress));
        user.setSoDienThoai("09" + String.format("%08d", (int)(Math.random() * 100000000)));
        user.setVaiTro(NguoiDung.VaiTro.USER);
        user.setTrangThai(true); // Changed from 1 to true
        user.setNgayTao(new java.util.Date());
        
        return user;
    }
    
    /**
     * Create multiple sample Vietnamese users at once
     */
    public static void insertMultipleVietnameseUsers(int count) {
        System.out.println("üáªüá≥ Th√™m " + count + " ng∆∞·ªùi d√πng ti·∫øng Vi·ªát m·∫´u...");
        
        NguoiDungDAO dao = new NguoiDungDAO();
        int successCount = 0;
        
        for (int i = 1; i <= count; i++) {
            String username = "vnuser_" + System.currentTimeMillis() + "_" + i;
            String email = "user" + i + "_" + System.currentTimeMillis() + "@uteshop.com";
            
            NguoiDung user = createSampleVietnameseUser(username, email);
            
            boolean success = dao.save(user);
            if (success) {
                successCount++;
                System.out.println("‚úÖ [" + i + "/" + count + "] T·∫°o th√†nh c√¥ng: " + user.getHoTen());
            } else {
                System.out.println("‚ùå [" + i + "/" + count + "] Th·∫•t b·∫°i: " + user.getHoTen());
            }
        }
        
        System.out.println("üéâ Ho√†n th√†nh! ƒê√£ t·∫°o th√†nh c√¥ng " + successCount + "/" + count + " ng∆∞·ªùi d√πng!");
    }
    
    /**
     * Example method showing how to safely insert Vietnamese data
     */
    public static void insertSampleVietnameseUsers() {
        insertMultipleVietnameseUsers(5);
    }
    
    /**
     * Method to create a Vietnamese user with specific details
     */
    public static NguoiDung createVietnameseUser(String username, String email, String fullName, 
                                                String address, String phone, NguoiDung.VaiTro role) {
        NguoiDung user = new NguoiDung();
        
        user.setTenDangNhap(username);
        user.setEmail(email);
        user.setMatKhau("password123"); // Remember to hash in real app
        user.setHoTen(VietnameseEncodingUtil.prepareVietnameseText(fullName));
        user.setDiaChi(VietnameseEncodingUtil.prepareVietnameseText(address));
        user.setSoDienThoai(phone);
        user.setVaiTro(role);
        user.setTrangThai(true); // Changed from 1 to true
        user.setNgayTao(new java.util.Date());
        
        return user;
    }
    
    /**
     * Validation method to check if Vietnamese text is properly encoded
     */
    public static boolean validateVietnameseText(String text) {
        if (text == null || text.trim().isEmpty()) {
            return true; // Empty text is valid
        }
        
        // Check for common Vietnamese characters
        String[] vietnameseChars = {"ƒÉ", "√¢", "ƒë", "√™", "√¥", "∆°", "∆∞", "√°", "√†", "·∫£", "√£", "·∫°"};
        
        boolean hasVietnamese = false;
        for (String vnChar : vietnameseChars) {
            if (text.toLowerCase().contains(vnChar)) {
                hasVietnamese = true;
                break;
            }
        }
        
        // If has Vietnamese characters, check they're not corrupted (no ? marks)
        if (hasVietnamese) {
            return !text.contains("?") && !text.contains("√É") && !text.contains("√¢‚Ç¨");
        }
        
        return true; // Non-Vietnamese text is valid
    }
    
    /**
     * Demonstrate creating Vietnamese users with different roles
     */
    public static void demonstrateVietnameseUsers() {
        System.out.println("üéØ Demo t·∫°o ng∆∞·ªùi d√πng ti·∫øng Vi·ªát v·ªõi c√°c vai tr√≤ kh√°c nhau:");
        
        NguoiDungDAO dao = new NguoiDungDAO();
        
        // Create admin user
        NguoiDung admin = createVietnameseUser(
            "admin_vn", 
            "admin.vn@uteshop.com",
            "Nguy·ªÖn Th√†nh Nam - Qu·∫£n tr·ªã vi√™n",
            "268 L√Ω Th∆∞·ªùng Ki·ªát, Qu·∫≠n 10, TP.HCM",
            "0901234567",
            NguoiDung.VaiTro.ADMIN
        );
        
        // Create vendor user  
        NguoiDung vendor = createVietnameseUser(
            "vendor_vn",
            "vendor.vn@uteshop.com", 
            "Tr·∫ßn Th·ªã Hoa - Ch·ªß c·ª≠a h√†ng",
            "123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM",
            "0902345678",
            NguoiDung.VaiTro.VENDOR
        );
        
        // Create shipper user
        NguoiDung shipper = createVietnameseUser(
            "shipper_vn",
            "shipper.vn@uteshop.com",
            "L√™ VƒÉn ƒê·ª©c - Nh√¢n vi√™n giao h√†ng", 
            "456 V√µ VƒÉn T·∫ßn, Qu·∫≠n 3, TP.HCM",
            "0903456789",
            NguoiDung.VaiTro.SHIPPER
        );
        
        // Save users and show results
        NguoiDung[] users = {admin, vendor, shipper};
        String[] roles = {"Qu·∫£n tr·ªã vi√™n", "Vendor", "Shipper"};
        
        for (int i = 0; i < users.length; i++) {
            boolean success = dao.save(users[i]);
            if (success) {
                System.out.println("‚úÖ " + roles[i] + ": " + users[i].getHoTen() + " | " + users[i].getDiaChi());
            } else {
                System.out.println("‚ùå Th·∫•t b·∫°i t·∫°o " + roles[i] + ": " + users[i].getHoTen());
            }
        }
    }
    
    /**
     * Main method for testing Vietnamese data insertion
     */
    public static void main(String[] args) {
        System.out.println("üß™ Testing Vietnamese Data Template...");
        
        // Test sample data creation
        NguoiDung sampleUser = createSampleVietnameseUser("test_template", "template@test.com");
        System.out.println("Sample user created:");
        System.out.println("Name: " + sampleUser.getHoTen());
        System.out.println("Address: " + sampleUser.getDiaChi());
        System.out.println("Phone: " + sampleUser.getSoDienThoai());
        
        // Validate the text
        boolean nameValid = validateVietnameseText(sampleUser.getHoTen());
        boolean addressValid = validateVietnameseText(sampleUser.getDiaChi());
        
        System.out.println("Name validation: " + (nameValid ? "‚úÖ VALID" : "‚ùå INVALID"));
        System.out.println("Address validation: " + (addressValid ? "‚úÖ VALID" : "‚ùå INVALID"));
        
        // Uncomment to run demonstrations
        // insertMultipleVietnameseUsers(5);
        // demonstrateVietnameseUsers();
        
        System.out.println("\nüìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:");
        System.out.println("1. G·ªçi insertMultipleVietnameseUsers(5) ƒë·ªÉ th√™m 5 user m·∫´u");
        System.out.println("2. G·ªçi demonstrateVietnameseUsers() ƒë·ªÉ t·∫°o user v·ªõi vai tr√≤ kh√°c nhau");
        System.out.println("3. S·ª≠ d·ª•ng createVietnameseUser() ƒë·ªÉ t·∫°o user v·ªõi th√¥ng tin c·ª• th·ªÉ");
        System.out.println("4. Lu√¥n s·ª≠ d·ª•ng validateVietnameseText() ƒë·ªÉ ki·ªÉm tra encoding");
    }
}